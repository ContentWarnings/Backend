# References
# https://stackabuse.com/validate-email-addresses-in-python-with-email-validator/
# https://github.com/JoshData/python-email-validator
# https://docs.sendgrid.com/for-developers/sending-email/quickstart-python
# https://stackoverflow.com/questions/50236117/scraping-ssl-certificate-verify-failed-error-for-http-en-wikipedia-org
# https://github.com/sendgrid/sendgrid-python/blob/main/use_cases/send_a_single_email_to_a_single_recipient.md

from dotenv import load_dotenv
from email_validator import validate_email, EmailNotValidError
from enum import Enum
from fastapi import HTTPException, status
import os
from sendgrid import SendGridAPIClient
from sendgrid.helpers.mail import Mail


class Emailer:
    """
    Bundles email related operations
    """

    # load .env and key
    load_dotenv()
    __SENDGRID_API_KEY = os.environ["SENDGRID_API_KEY"]
    __SENDER_EMAIL = "no-reply@moviementor.app"

    class VerificationCode(Enum):
        """
        Different types of verification codes sent to users via email
        """

        VERIFICATION = "Verification"
        DELETION = "Deletion"
        PASSWORD_RESET = "Password Reset"

    @staticmethod
    def generate_html(subject: str, body: str, link: str):
        return f"""
<!DOCTYPE html>
<html>
<head>
    <style type="text/css">
        * {{
            box-sizing: border-box;
            transition: background-color 100ms cubic-bezier(0.4, 0, 0.2, 1);
        }}
        html, body {{
            background-color: #1e1e1e;
            color: white;
            margin: 0;
            font-family: "Roboto", sans-serif;
        }}
        .nav {{
            width: 100%;
            text-align: center;
            background-color: #7e57c2;
            padding: 10px;
        }}
        .main {{
            max-width: 500px;
            width: 100%;
            margin: auto;
            padding: 10px;
        }}
        p {{
            font-size: 18px;
            margin: 0;
            margin-bottom: 5px
        }}
        a {{
            background-color: #7e57c2;
            padding: 7px 14px;
            border-radius: 5px;
            font-weight: bold;
            font-size: 21px;
            margin: 10px 0;
            color: white;
            display: inline-block;
            text-decoration: none;
        }}
        a:hover {{
            background-color: #b085f5;
        }}
    </style>
</head>
<body>
    <div class="nav">
        <svg width="255" height="50" viewBox="0 0 255 52" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M64.1719 14.25H68.1406L73.9844 30.9531L79.8281 14.25H83.7969L75.5781 37H72.3906L64.1719 14.25ZM62.0312 14.25H65.9844L66.7031 30.5312V37H62.0312V14.25ZM81.9844 14.25H85.9531V37H81.2656V30.5312L81.9844 14.25ZM89.0625 28.7188V28.3906C89.0625 27.151 89.2396 26.0104 89.5938 24.9688C89.9479 23.9167 90.4635 23.0052 91.1406 22.2344C91.8177 21.4635 92.651 20.8646 93.6406 20.4375C94.6302 20 95.7656 19.7812 97.0469 19.7812C98.3281 19.7812 99.4688 20 100.469 20.4375C101.469 20.8646 102.307 21.4635 102.984 22.2344C103.672 23.0052 104.193 23.9167 104.547 24.9688C104.901 26.0104 105.078 27.151 105.078 28.3906V28.7188C105.078 29.9479 104.901 31.0885 104.547 32.1406C104.193 33.1823 103.672 34.0938 102.984 34.875C102.307 35.6458 101.474 36.2448 100.484 36.6719C99.4948 37.099 98.3594 37.3125 97.0781 37.3125C95.7969 37.3125 94.6562 37.099 93.6562 36.6719C92.6667 36.2448 91.8281 35.6458 91.1406 34.875C90.4635 34.0938 89.9479 33.1823 89.5938 32.1406C89.2396 31.0885 89.0625 29.9479 89.0625 28.7188ZM93.5625 28.3906V28.7188C93.5625 29.4271 93.625 30.0885 93.75 30.7031C93.875 31.3177 94.0729 31.8594 94.3438 32.3281C94.625 32.7865 94.9896 33.1458 95.4375 33.4062C95.8854 33.6667 96.4323 33.7969 97.0781 33.7969C97.7031 33.7969 98.2396 33.6667 98.6875 33.4062C99.1354 33.1458 99.4948 32.7865 99.7656 32.3281C100.036 31.8594 100.234 31.3177 100.359 30.7031C100.495 30.0885 100.562 29.4271 100.562 28.7188V28.3906C100.562 27.7031 100.495 27.0573 100.359 26.4531C100.234 25.8385 100.031 25.2969 99.75 24.8281C99.4792 24.349 99.1198 23.974 98.6719 23.7031C98.224 23.4323 97.6823 23.2969 97.0469 23.2969C96.4115 23.2969 95.8698 23.4323 95.4219 23.7031C94.9844 23.974 94.625 24.349 94.3438 24.8281C94.0729 25.2969 93.875 25.8385 93.75 26.4531C93.625 27.0573 93.5625 27.7031 93.5625 28.3906ZM113.344 33.7188L117.094 20.0938H121.797L116.094 37H113.25L113.344 33.7188ZM110.766 20.0938L114.531 33.7344L114.609 37H111.75L106.047 20.0938H110.766ZM128.562 20.0938V37H124.047V20.0938H128.562ZM123.766 15.6875C123.766 15.0312 123.995 14.4896 124.453 14.0625C124.911 13.6354 125.526 13.4219 126.297 13.4219C127.057 13.4219 127.667 13.6354 128.125 14.0625C128.594 14.4896 128.828 15.0312 128.828 15.6875C128.828 16.3438 128.594 16.8854 128.125 17.3125C127.667 17.7396 127.057 17.9531 126.297 17.9531C125.526 17.9531 124.911 17.7396 124.453 17.3125C123.995 16.8854 123.766 16.3438 123.766 15.6875ZM140.062 37.3125C138.75 37.3125 137.573 37.1042 136.531 36.6875C135.49 36.2604 134.604 35.6719 133.875 34.9219C133.156 34.1719 132.604 33.3021 132.219 32.3125C131.833 31.3125 131.641 30.25 131.641 29.125V28.5C131.641 27.2188 131.823 26.0469 132.188 24.9844C132.552 23.9219 133.073 23 133.75 22.2188C134.438 21.4375 135.271 20.8385 136.25 20.4219C137.229 19.9948 138.333 19.7812 139.562 19.7812C140.76 19.7812 141.823 19.9792 142.75 20.375C143.677 20.7708 144.453 21.3333 145.078 22.0625C145.714 22.7917 146.193 23.6667 146.516 24.6875C146.839 25.6979 147 26.8229 147 28.0625V29.9375H133.562V26.9375H142.578V26.5938C142.578 25.9688 142.464 25.4115 142.234 24.9219C142.016 24.4219 141.682 24.026 141.234 23.7344C140.786 23.4427 140.214 23.2969 139.516 23.2969C138.922 23.2969 138.411 23.4271 137.984 23.6875C137.557 23.9479 137.208 24.3125 136.938 24.7812C136.677 25.25 136.479 25.8021 136.344 26.4375C136.219 27.0625 136.156 27.75 136.156 28.5V29.125C136.156 29.8021 136.25 30.4271 136.438 31C136.635 31.5729 136.911 32.0677 137.266 32.4844C137.63 32.901 138.068 33.224 138.578 33.4531C139.099 33.6823 139.688 33.7969 140.344 33.7969C141.156 33.7969 141.911 33.6406 142.609 33.3281C143.318 33.0052 143.927 32.5208 144.438 31.875L146.625 34.25C146.271 34.7604 145.786 35.25 145.172 35.7188C144.568 36.1875 143.839 36.5729 142.984 36.875C142.13 37.1667 141.156 37.3125 140.062 37.3125ZM151.984 14.25H155.953L161.797 30.9531L167.641 14.25H171.609L163.391 37H160.203L151.984 14.25ZM149.844 14.25H153.797L154.516 30.5312V37H149.844V14.25ZM169.797 14.25H173.766V37H169.078V30.5312L169.797 14.25ZM185.375 37.3125C184.062 37.3125 182.885 37.1042 181.844 36.6875C180.802 36.2604 179.917 35.6719 179.188 34.9219C178.469 34.1719 177.917 33.3021 177.531 32.3125C177.146 31.3125 176.953 30.25 176.953 29.125V28.5C176.953 27.2188 177.135 26.0469 177.5 24.9844C177.865 23.9219 178.385 23 179.062 22.2188C179.75 21.4375 180.583 20.8385 181.562 20.4219C182.542 19.9948 183.646 19.7812 184.875 19.7812C186.073 19.7812 187.135 19.9792 188.062 20.375C188.99 20.7708 189.766 21.3333 190.391 22.0625C191.026 22.7917 191.505 23.6667 191.828 24.6875C192.151 25.6979 192.312 26.8229 192.312 28.0625V29.9375H178.875V26.9375H187.891V26.5938C187.891 25.9688 187.776 25.4115 187.547 24.9219C187.328 24.4219 186.995 24.026 186.547 23.7344C186.099 23.4427 185.526 23.2969 184.828 23.2969C184.234 23.2969 183.724 23.4271 183.297 23.6875C182.87 23.9479 182.521 24.3125 182.25 24.7812C181.99 25.25 181.792 25.8021 181.656 26.4375C181.531 27.0625 181.469 27.75 181.469 28.5V29.125C181.469 29.8021 181.562 30.4271 181.75 31C181.948 31.5729 182.224 32.0677 182.578 32.4844C182.943 32.901 183.38 33.224 183.891 33.4531C184.411 33.6823 185 33.7969 185.656 33.7969C186.469 33.7969 187.224 33.6406 187.922 33.3281C188.63 33.0052 189.24 32.5208 189.75 31.875L191.938 34.25C191.583 34.7604 191.099 35.25 190.484 35.7188C189.88 36.1875 189.151 36.5729 188.297 36.875C187.443 37.1667 186.469 37.3125 185.375 37.3125ZM199.281 23.7031V37H194.781V20.0938H199L199.281 23.7031ZM198.625 27.9531H197.406C197.406 26.7031 197.568 25.5781 197.891 24.5781C198.214 23.5677 198.667 22.7083 199.25 22C199.833 21.2812 200.526 20.7344 201.328 20.3594C202.141 19.974 203.047 19.7812 204.047 19.7812C204.839 19.7812 205.562 19.8958 206.219 20.125C206.875 20.3542 207.438 20.7188 207.906 21.2188C208.385 21.7188 208.75 22.3802 209 23.2031C209.26 24.026 209.391 25.0312 209.391 26.2188V37H204.859V26.2031C204.859 25.4531 204.755 24.8698 204.547 24.4531C204.339 24.0365 204.031 23.7448 203.625 23.5781C203.229 23.401 202.74 23.3125 202.156 23.3125C201.552 23.3125 201.026 23.4323 200.578 23.6719C200.141 23.9115 199.776 24.2448 199.484 24.6719C199.203 25.0885 198.99 25.5781 198.844 26.1406C198.698 26.7031 198.625 27.3073 198.625 27.9531ZM221.094 20.0938V23.2812H211.25V20.0938H221.094ZM213.688 15.9219H218.188V31.9062C218.188 32.3958 218.25 32.7708 218.375 33.0312C218.51 33.2917 218.708 33.474 218.969 33.5781C219.229 33.6719 219.557 33.7188 219.953 33.7188C220.234 33.7188 220.484 33.7083 220.703 33.6875C220.932 33.6562 221.125 33.625 221.281 33.5938L221.297 36.9062C220.911 37.0312 220.495 37.1302 220.047 37.2031C219.599 37.276 219.104 37.3125 218.562 37.3125C217.573 37.3125 216.708 37.151 215.969 36.8281C215.24 36.4948 214.677 35.9635 214.281 35.2344C213.885 34.5052 213.688 33.5469 213.688 32.3594V15.9219ZM222.531 28.7188V28.3906C222.531 27.151 222.708 26.0104 223.062 24.9688C223.417 23.9167 223.932 23.0052 224.609 22.2344C225.286 21.4635 226.12 20.8646 227.109 20.4375C228.099 20 229.234 19.7812 230.516 19.7812C231.797 19.7812 232.938 20 233.938 20.4375C234.938 20.8646 235.776 21.4635 236.453 22.2344C237.141 23.0052 237.661 23.9167 238.016 24.9688C238.37 26.0104 238.547 27.151 238.547 28.3906V28.7188C238.547 29.9479 238.37 31.0885 238.016 32.1406C237.661 33.1823 237.141 34.0938 236.453 34.875C235.776 35.6458 234.943 36.2448 233.953 36.6719C232.964 37.099 231.828 37.3125 230.547 37.3125C229.266 37.3125 228.125 37.099 227.125 36.6719C226.135 36.2448 225.297 35.6458 224.609 34.875C223.932 34.0938 223.417 33.1823 223.062 32.1406C222.708 31.0885 222.531 29.9479 222.531 28.7188ZM227.031 28.3906V28.7188C227.031 29.4271 227.094 30.0885 227.219 30.7031C227.344 31.3177 227.542 31.8594 227.812 32.3281C228.094 32.7865 228.458 33.1458 228.906 33.4062C229.354 33.6667 229.901 33.7969 230.547 33.7969C231.172 33.7969 231.708 33.6667 232.156 33.4062C232.604 33.1458 232.964 32.7865 233.234 32.3281C233.505 31.8594 233.703 31.3177 233.828 30.7031C233.964 30.0885 234.031 29.4271 234.031 28.7188V28.3906C234.031 27.7031 233.964 27.0573 233.828 26.4531C233.703 25.8385 233.5 25.2969 233.219 24.8281C232.948 24.349 232.589 23.974 232.141 23.7031C231.693 23.4323 231.151 23.2969 230.516 23.2969C229.88 23.2969 229.339 23.4323 228.891 23.7031C228.453 23.974 228.094 24.349 227.812 24.8281C227.542 25.2969 227.344 25.8385 227.219 26.4531C227.094 27.0573 227.031 27.7031 227.031 28.3906ZM245.812 23.7812V37H241.312V20.0938H245.547L245.812 23.7812ZM250.906 19.9844L250.828 24.1562C250.609 24.125 250.344 24.099 250.031 24.0781C249.729 24.0469 249.453 24.0312 249.203 24.0312C248.568 24.0312 248.016 24.1146 247.547 24.2812C247.089 24.4375 246.703 24.6719 246.391 24.9844C246.089 25.2969 245.859 25.6771 245.703 26.125C245.557 26.5729 245.474 27.0833 245.453 27.6562L244.547 27.375C244.547 26.2812 244.656 25.276 244.875 24.3594C245.094 23.4323 245.411 22.625 245.828 21.9375C246.255 21.25 246.776 20.7188 247.391 20.3438C248.005 19.9688 248.708 19.7812 249.5 19.7812C249.75 19.7812 250.005 19.8021 250.266 19.8438C250.526 19.875 250.74 19.9219 250.906 19.9844Z" fill="white"></path><rect x="6.91791" y="44.6201" width="3.3746" height="5.0619" rx="0.84365" fill="#D9D9D9"></rect><rect x="31.89" y="44.6201" width="3.3746" height="5.0619" rx="0.84365" fill="#D9D9D9"></rect><path fill-rule="evenodd" clip-rule="evenodd" d="M11.1039 4.60875L11.1358 4.51851L11.3425 4.5495L12.8819 4.78043L13.8879 3.46495L14.0386 3.2679L14.2386 3.41459L15.3429 4.22436L16.8778 2.91966L16.9973 2.8181L17.1414 2.87987L18.7921 3.5873L20.4518 2.55984L20.6101 2.46185L20.7508 2.58378L21.8885 3.56981L23.9308 2.54866L24.0894 2.46938L24.2181 2.5913L25.7026 3.99766L27.8293 3.13121L28.0101 3.05754L28.1273 3.21374L29.282 4.75332L31.301 4.05444L31.5524 3.9674C31.5485 4.21639 31.4151 4.45741 31.1687 4.68616L31.1638 4.63758L29.2731 5.29207L29.0986 5.35246L28.9878 5.20475L27.8395 3.67365L25.7424 4.528L25.5913 4.58956L25.4729 4.47734L23.9986 3.08069L21.9637 4.09816L21.8125 4.17376L21.6848 4.06305L20.56 3.08823L18.9466 4.08698L18.8347 4.15627L18.7137 4.10442L17.0862 3.4069L15.5183 4.73955L15.366 4.86904L15.2048 4.7508L14.1393 3.96948L13.1933 5.20664L13.1025 5.32536L12.9547 5.30319L11.8393 5.13589C11.5273 4.96907 11.2794 4.79263 11.1039 4.60875ZM12.6736 5.50439C12.6953 5.51242 12.7171 5.52043 12.7391 5.5284V5.48802L12.6736 5.50439Z" fill="#F9FBBA"></path><line x1="19.77" y1="14.6624" x2="13.4427" y2="3.70303" stroke="#B0B0B0" stroke-width="1.6873"></line><line x1="23.7352" y1="14.4936" x2="30.0626" y2="3.53431" stroke="#B0B0B0" stroke-width="1.6873"></line><rect y="13.0676" width="42.1825" height="33.746" rx="3.3746" fill="#4D2C91"></rect><rect x="4.21826" y="17.2858" width="33.746" height="25.3095" rx="3.3746" fill="#E0E0E0"></rect><path d="M14.5108 33.8214C16.3934 35.8265 17.7972 36.3715 20.714 36.6898C23.7465 36.5746 25.2408 35.8539 27.6717 33.8214" stroke="black" stroke-width="1.6873"></path><path d="M9.95508 26.9035L12.0128 21.8416L14.0704 23.2221L16.1281 21.8416L18.3916 26.9035" stroke="black" stroke-width="1.6873"></path><path d="M24.4658 26.9035L26.5235 21.8416L28.5812 23.2221L30.6389 21.8416L32.9023 26.9035" stroke="black" stroke-width="1.6873"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M20.6102 2.46185L20.7508 2.58378L21.8886 3.56981L23.9309 2.54867L24.0894 2.46939L24.2181 2.59131L25.7026 3.99766L27.8293 3.13121L28.0102 3.05754L28.1273 3.21374L29.282 4.75333L31.301 4.05444L31.6038 3.94964L31.6356 4.26843L31.7603 5.51471L32.6683 4.8488L33.0363 5.18089L31.6021 7.62748L31.4799 7.83605L31.2659 7.72345L29.9304 7.02055L29.4315 8.5886L29.3446 8.8618L29.0842 8.74166L27.0375 7.79703L25.4734 9.12653L25.2567 9.31075L25.0989 9.07408L24.5525 8.2544L22.8998 9.15588L22.758 9.2332L22.6281 9.13722L20.8199 7.80072L18.432 9.15388L18.2337 9.26624L18.1013 9.08079L16.9756 7.50485L15.0691 8.72503L14.8536 8.86294L14.718 8.646L13.9937 7.48718L12.5944 8.15004L12.2329 8.32125V7.92131V6.13634L10.8601 6.47954L10.4034 6.59373L10.5601 6.14977L11.0663 4.71557L11.1358 4.51851L11.3425 4.54951L12.882 4.78043L13.8879 3.46495L14.0386 3.2679L14.2386 3.41459L15.3429 4.22437L16.8778 2.91966L16.9973 2.8181L17.1414 2.87987L18.7921 3.5873L20.4519 2.55984L20.6102 2.46185ZM23.9987 3.0807L21.9637 4.09816L21.8125 4.17376L21.6848 4.06305L20.56 3.08823L18.9466 4.08698L18.8347 4.15627L18.7137 4.10442L17.0862 3.4069L15.5184 4.73955L15.366 4.86905L15.2048 4.7508L14.1393 3.96948L13.1933 5.20664L13.1025 5.32536L12.9547 5.30319L11.474 5.08109L11.1941 5.87428L12.4247 5.56664L12.7391 5.48802V5.81218V7.52136L13.9806 6.93329L14.1842 6.83686L14.3036 7.02788L15.0117 8.16078L16.9053 6.94885L17.1079 6.81919L17.2477 7.01491L18.3807 8.60113L20.7134 7.27928L20.8564 7.19824L20.9886 7.29595L22.7991 8.63417L24.5134 7.69911L24.7167 7.58821L24.8452 7.78091L25.3623 8.55662L26.8329 7.30664L26.9561 7.20193L27.1029 7.26968L29.0361 8.16192L29.5397 6.57909L29.6313 6.29111L29.8987 6.43186L31.2877 7.16291L31.9807 5.98078L31.7022 6.18501L31.3448 6.44711L31.3007 6.00609L31.1638 4.63758L29.2731 5.29207L29.0986 5.35246L28.9878 5.20475L27.8395 3.67365L25.7425 4.528L25.5914 4.58956L25.4729 4.47735L23.9987 3.0807ZM11.104 4.60875L11.1358 4.51851L11.3425 4.54951L12.882 4.78043L13.8879 3.46495L14.0386 3.2679L14.2386 3.41459L15.3429 4.22437L16.8778 2.91966L16.9973 2.8181L17.1414 2.87987L18.7921 3.5873L20.4519 2.55984L20.6102 2.46185L20.7508 2.58378L21.8886 3.56981L23.9309 2.54867L24.0894 2.46939L24.2181 2.59131L25.7026 3.99766L27.8293 3.13121L28.0102 3.05754L28.1273 3.21374L29.282 4.75333L31.301 4.05444L31.5524 3.96741C31.5485 4.21639 31.4151 4.45741 31.1687 4.68616L31.1638 4.63758L29.2731 5.29207L29.0986 5.35246L28.9878 5.20475L27.8395 3.67365L25.7425 4.528L25.5914 4.58956L25.4729 4.47735L23.9987 3.0807L21.9637 4.09816L21.8125 4.17376L21.6848 4.06305L20.56 3.08823L18.9466 4.08698L18.8347 4.15627L18.7137 4.10442L17.0862 3.4069L15.5184 4.73955L15.366 4.86905L15.2048 4.7508L14.1393 3.96948L13.1933 5.20664L13.1025 5.32536L12.9547 5.30319L11.8394 5.13589C11.5273 4.96907 11.2794 4.79263 11.104 4.60875ZM12.6737 5.50439C12.6953 5.51242 12.7171 5.52043 12.7391 5.5284V5.48802L12.6737 5.50439Z" fill="#F9FBBA"></path></svg>
    </div>
    <div class="main">
        <h1>{subject}</h1>
        <p>{body}</p>
        <a href="{link}">Verify</a>
    </div>
</body>
</html>
        """

    @staticmethod
    def perform_email_validation(email: str) -> None:
        """
        Validates given email, raising errors if invalid
        """
        try:
            # call module's function here to outsource work
            validate_email(email)
        except EmailNotValidError as ex:
            # logging
            print(f"Error validating email {email}")
            print(ex)

            raise HTTPException(
                status_code=status.HTTP_406_NOT_ACCEPTABLE,
                detail=f"Email {email} is invalid.",
            )

    @staticmethod
    def __send_email(receiver_email: str, subject: str, msg: str) -> bool:
        Emailer.perform_email_validation(receiver_email)

        print(f"Sending email of {msg} to {receiver_email}")  # logging

        message = Mail(
            from_email=Emailer.__SENDER_EMAIL,
            to_emails=receiver_email,
            subject=subject,
            html_content=msg,
        )
        try:
            sg = SendGridAPIClient(Emailer.__SENDGRID_API_KEY)
            sg.send(message)
            return True
        except Exception as ex:
            print("Error sending email:")
            print(ex)

            raise HTTPException(
                status_code=status.HTTP_406_NOT_ACCEPTABLE,
                detail=f"Error sending email to {receiver_email}.",
            )

    @staticmethod
    def send_code_via_email(
        receiver_email: str, code: str, code_type: VerificationCode
    ) -> bool:
        """
        Sends a verification code of specified type to specified email
        """

        subject = f"MovieMentor {code_type.value} Code"

        message = (
            f"Thank you for using MovieMentor! Your {code_type.value} code is {code}."
        )
        link = f"https://moviementor.app/account/verify?src={code_type.value.lower().replace(' ', '_')}&token={code}"

        if code_type == VERIFICATION:
            message = "Thank you for signing up as a contributor on MovieMentor! To finish setting up your account, click the Verify button below. If this was not done by you, you can safely ignore this email."
            link = f"https://moviementor.app/account/verify?src=register&token={code}&email={receiver_email}"
        elif code_type == DELETION:
            message = "It's sad to see you go! To finish deleting your account, click the Verify button below while logged into your MovieMentor account."
            link = f"https://moviementor.app/account/verify?src=delete&token={code}"
        elif code_type == PASSWORD_RESET:
            message = "We heard you forgot your password! To finish deleting your account, click the Verify button below. If this was not done by you, you can safely ignore this email."
            link = f"https://moviementor.app/account/verify/passwd?email={receiver_email}&token={code}"

        html = Emailer.generate_html(subject, message, link)

        return Emailer.__send_email(receiver_email, subject, html)
